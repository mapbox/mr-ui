// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ControlFile all options renders 1`] = `
<ControlWrapper
  id="testinput-3"
  themeControlWrapper="bg-red-light"
  validationError="oh no!"
>
  <ControlLabel
    aside={
      <span>
        Aside text
      </span>
    }
    id="testinput-3"
    optional={true}
    text="All options"
    themeLabel="txt-s txt-bold"
  />
  <div
    className="flex-parent flex-parent--center-cross clip"
  >
    <div
      className="flex-child flex-child--grow"
    >
      <button
        aria-hidden={true}
        className="bg-red-faint py6 px12 round-full link--red txt-s relative"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <span
          className="txt-truncate"
        >
          <Icon
            inline={false}
            name="harddrive"
            themeIcon="mr6 inline-block align-middle"
          />
          Select an image
        </span>
      </button>
      <input
        accept=".jpg, .jpeg, .png"
        aria-invalid={true}
        aria-required={false}
        autoFocus={true}
        className="absolute opacity0 top left"
        data-test="testinput-3-input"
        disabled={false}
        id="testinput-3"
        multiple={true}
        name="testinput-3"
        onChange={[Function]}
        style={
          Object {
            "height": "0",
            "width": "0",
            "zIndex": -1,
          }
        }
        tabIndex={-1}
        type="file"
      />
    </div>
  </div>
</ControlWrapper>
`;

exports[`ControlFile basic receives an array of one file as value, displaying its name and the clear button 1`] = `
<ControlWrapper
  id="testinput-1"
  themeControlWrapper=""
>
  <ControlLabel
    id="testinput-1"
    optional={false}
    text="Basic"
    themeLabel="txt-s txt-bold mb6"
  />
  <div
    className="flex-parent flex-parent--center-cross clip"
  >
    <div
      className="flex-child flex-child--grow"
    >
      <button
        aria-hidden={true}
        className="btn align-l bg-gray-faint py6 px12 round-full w-full txt-s link--gray txt-normal relative"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <span
          className="txt-truncate"
        >
          <Icon
            inline={false}
            name="harddrive"
            themeIcon="mr6 inline-block align-middle"
          />
          bon jovi.mp3
        </span>
      </button>
      <input
        aria-required={true}
        className="absolute opacity0 top left"
        data-test="testinput-1-input"
        disabled={false}
        id="testinput-1"
        name="testinput-1"
        onChange={[Function]}
        style={
          Object {
            "height": "0",
            "width": "0",
            "zIndex": -1,
          }
        }
        tabIndex={-1}
        type="file"
      />
    </div>
    <div
      className="flex-child"
    >
      <Tooltip
        alignment="center"
        block={true}
        coloring="light"
        content="Clear"
        disabled={false}
        maxWidth="medium"
        padding="small"
        placement="top"
        respondsToClick={false}
        textSize="s"
      >
        <button
          className="block link link--gray relative bg-transparent py0 "
          data-test="control-file-clear"
          onClick={[Function]}
          type="button"
        >
          <Icon
            inline={false}
            name="trash"
          />
        </button>
      </Tooltip>
    </div>
  </div>
</ControlWrapper>
`;

exports[`ControlFile basic renders 1`] = `
<ControlWrapper
  id="testinput-1"
  themeControlWrapper=""
>
  <ControlLabel
    id="testinput-1"
    optional={false}
    text="Basic"
    themeLabel="txt-s txt-bold mb6"
  />
  <div
    className="flex-parent flex-parent--center-cross clip"
  >
    <div
      className="flex-child flex-child--grow"
    >
      <button
        aria-hidden={true}
        className="btn align-l bg-gray-faint py6 px12 round-full w-full txt-s link--gray txt-normal relative"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <span
          className="txt-truncate"
        >
          <Icon
            inline={false}
            name="harddrive"
            themeIcon="mr6 inline-block align-middle"
          />
          Select a file
        </span>
      </button>
      <input
        aria-required={true}
        className="absolute opacity0 top left"
        data-test="testinput-1-input"
        disabled={false}
        id="testinput-1"
        name="testinput-1"
        onChange={[Function]}
        style={
          Object {
            "height": "0",
            "width": "0",
            "zIndex": -1,
          }
        }
        tabIndex={-1}
        type="file"
      />
    </div>
  </div>
</ControlWrapper>
`;

exports[`ControlFile disabled renders 1`] = `
<ControlWrapper
  id="testinput-2"
  themeControlWrapper=""
>
  <ControlLabel
    id="testinput-2"
    optional={false}
    text="Disabled"
    themeLabel="txt-s txt-bold mb6"
  />
  <div
    className="flex-parent flex-parent--center-cross clip"
  >
    <div
      className="flex-child flex-child--grow"
    >
      <button
        aria-hidden={true}
        className="btn align-l bg-gray-faint py6 px12 round-full w-full txt-s link--gray txt-normal relative"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        <span
          className="txt-truncate"
        >
          <Icon
            inline={false}
            name="harddrive"
            themeIcon="mr6 inline-block align-middle"
          />
          Select a file
        </span>
      </button>
      <input
        aria-required={true}
        className="absolute opacity0 top left"
        data-test="testinput-2-input"
        disabled={true}
        id="testinput-2"
        name="testinput-2"
        onChange={[Function]}
        style={
          Object {
            "height": "0",
            "width": "0",
            "zIndex": -1,
          }
        }
        tabIndex={-1}
        type="file"
      />
    </div>
  </div>
</ControlWrapper>
`;

exports[`ControlFile multiple receives an array of files as value, displaying their names and the clear button 1`] = `
<ControlWrapper
  id="testinput-multiple"
  themeControlWrapper=""
>
  <ControlLabel
    id="testinput-multiple"
    optional={false}
    text="Multiple"
    themeLabel="txt-s txt-bold mb6"
  />
  <div
    className="flex-parent flex-parent--center-cross clip"
  >
    <div
      className="flex-child flex-child--grow"
    >
      <button
        aria-hidden={true}
        className="btn align-l bg-gray-faint py6 px12 round-full w-full txt-s link--gray txt-normal relative"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <span
          className="txt-truncate"
        >
          <Icon
            inline={false}
            name="harddrive"
            themeIcon="mr6 inline-block align-middle"
          />
          bon jovi.mp3, aerosmith.mp3
        </span>
      </button>
      <input
        aria-required={true}
        className="absolute opacity0 top left"
        data-test="testinput-multiple-input"
        disabled={false}
        id="testinput-multiple"
        multiple={true}
        name="testinput-multiple"
        onChange={[Function]}
        style={
          Object {
            "height": "0",
            "width": "0",
            "zIndex": -1,
          }
        }
        tabIndex={-1}
        type="file"
      />
    </div>
    <div
      className="flex-child"
    >
      <Tooltip
        alignment="center"
        block={true}
        coloring="light"
        content="Clear"
        disabled={false}
        maxWidth="medium"
        padding="small"
        placement="top"
        respondsToClick={false}
        textSize="s"
      >
        <button
          className="block link link--gray relative bg-transparent py0 "
          data-test="control-file-clear"
          onClick={[Function]}
          type="button"
        >
          <Icon
            inline={false}
            name="trash"
          />
        </button>
      </Tooltip>
    </div>
  </div>
</ControlWrapper>
`;
