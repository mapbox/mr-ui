// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ControlText all options renders 1`] = `
<ControlWrapper
  id="testinput"
  themeControlWrapper="bg-gray-faint"
>
  <ControlLabel
    aside={
      <span>
        Aside text
      </span>
    }
    id="testinput"
    optional={true}
    text="All options"
    themeLabel="txt-s txt-bold"
  />
  <div
    className="flex-parent"
    data-test="control-text-container"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
  >
    <input
      aria-invalid={true}
      aria-required={false}
      autoCapitalize="none"
      autoCorrect="off"
      autoFocus={true}
      className="txt-bold input round-l flex-child flex-child--grow"
      data-test="testinput-input"
      id="testinput"
      name="testinput"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Enter an email address"
      spellCheck={false}
      style={
        Object {
          "boxShadow": "inset 0 0 0 1px #f74e4e",
        }
      }
      type="email"
      value="foo@bar.baz"
    />
    <button
      aria-label="oh no!"
      className="flex-child bg-red color-white round-r px6"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      role="alert"
      type="button"
    >
      <span
        className="flex-parent flex-parent--center-cross flex-parent--center-main"
      >
        <Icon
          inline={false}
          name="alert"
          passthroughProps={Object {}}
          size={18}
          themeIcon="cursor-pointer"
        />
      </span>
    </button>
  </div>
</ControlWrapper>
`;

exports[`ControlText basic onChange gets called with input id and value 1`] = `
<ControlWrapper
  id="testinput"
  themeControlWrapper=""
>
  <ControlLabel
    id="testinput"
    optional={false}
    text="Basic"
    themeLabel="txt-s txt-bold mb6"
  />
  <input
    aria-required={true}
    className="input"
    data-test="testinput-input"
    id="testinput"
    name="testinput"
    onChange={[Function]}
    type="text"
    value=""
  />
</ControlWrapper>
`;

exports[`ControlText basic renders 1`] = `
<ControlWrapper
  id="testinput"
  themeControlWrapper=""
>
  <ControlLabel
    id="testinput"
    optional={false}
    text="Basic"
    themeLabel="txt-s txt-bold mb6"
  />
  <input
    aria-required={true}
    className="input"
    data-test="testinput-input"
    id="testinput"
    name="testinput"
    onChange={[Function]}
    type="text"
    value=""
  />
</ControlWrapper>
`;

exports[`ControlText default validation error renders 1`] = `
<ControlWrapper
  id="testinput"
  themeControlWrapper=""
  validationError="oh no!"
>
  <ControlLabel
    id="testinput"
    optional={false}
    text="Validation error"
    themeLabel="txt-s txt-bold mb6"
  />
  <input
    aria-invalid={true}
    aria-required={true}
    className="input"
    data-test="testinput-input"
    id="testinput"
    name="testinput"
    onChange={[Function]}
    type="text"
    value=""
  />
</ControlWrapper>
`;

exports[`ControlText disabled renders 1`] = `
<ControlWrapper
  id="testinput"
  themeControlWrapper=""
>
  <ControlLabel
    id="testinput"
    optional={false}
    text="Disabled"
    themeLabel="txt-s txt-bold mb6"
  />
  <input
    aria-required={true}
    className="input"
    data-test="testinput-input"
    disabled={true}
    id="testinput"
    name="testinput"
    onChange={[Function]}
    type="text"
    value=""
  />
</ControlWrapper>
`;

exports[`ControlText error inline option renders 1`] = `
<ControlWrapper
  id="testinput"
  themeControlWrapper=""
>
  <ControlLabel
    id="testinput"
    optional={false}
    text="Error inline"
    themeLabel="txt-s txt-bold mb6"
  />
  <div
    className="flex-parent"
    data-test="control-text-container"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
  >
    <input
      aria-invalid={true}
      aria-required={true}
      className="input round-l flex-child flex-child--grow"
      data-test="testinput-input"
      id="testinput"
      name="testinput"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "boxShadow": "inset 0 0 0 1px #f74e4e",
        }
      }
      type="text"
      value=""
    />
    <button
      aria-label="oh no!"
      className="flex-child bg-red color-white round-r px6"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      role="alert"
      type="button"
    >
      <span
        className="flex-parent flex-parent--center-cross flex-parent--center-main"
      >
        <Icon
          inline={false}
          name="alert"
          passthroughProps={Object {}}
          size={18}
          themeIcon="cursor-pointer"
        />
      </span>
    </button>
  </div>
</ControlWrapper>
`;
